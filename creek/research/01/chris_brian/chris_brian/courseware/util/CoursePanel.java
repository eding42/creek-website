/* * * @(#)CoursePanel.java 0.1 97/08/01 * * Copyright (c) 1997 Ginger Booth.  All Rights Reserved. * * @history: original * @author Ginger Booth * @version 0.1, August 1997 */package courseware.util;import java.applet.Applet;import java.awt.*;/**  CoursePanel holds the buttons on top of the screen, the commentary,     and makes real estate choices for the parent applet. */public class CoursePanel extends Panel {    private Applet parent;    private static int padding = 2; // around buttons    public CoursePanel(Applet owner) {        super();        parent  = owner;    }    public CoursePanel() {super();}    public void setOwner(Applet applet) { parent = applet; }    public Applet getOwner() { return parent; }    /** Padding used in TableLayout, both around and between buttons. */    public static void setPadding(int i) { padding = i;}    public static int getPadding() { return padding;}    public void init() {        // now I lay me out...        TableLayout table;        this.setLayout(table = new TableLayout(padding, padding));    }    /** Figure out how many rows to use if can evenly distribute     *  buttons between them, else go for 6 buttons per full row.     *  Really needs to be smarter, find how many will fit.     */    public void doLayout() {        TableLayout table = (TableLayout) this.getLayout();        table.removeAllComponents(); // not sure this is necessary....        int numButtons = this.getComponentCount();        if (numButtons < 1)            return;        for (int b=0; b<numButtons; b++)            table.setConstraint(getComponent(b), b, 0);        super.doLayout();    }    public Component getButton(int i) {      int numButtons = getComponentCount();      if (i >= numButtons)        return null;      return getComponent(i);    }    /** Add/replace reader button named "label".     */    public void setReader(String label, String fileToRead)    {        int numButtons = getComponentCount();        ReaderButton button;        Component c;        for (int i=0; i<numButtons; i++) {            c = getComponent(i);            if (c instanceof ReaderButton) {                button = (ReaderButton) c;                if ( label.equals(button.getLabel()) ) {                    button.setFile(fileToRead);                    return;                }            }        }        button = new ReaderButton(label, fileToRead, parent);        add(button, TableLayout.NEXT);    }    /** Add/replace reader button with "pictureToShow". (Replace if same picture.)     */    public void setLogo(String pictureToShow, String fileToRead, int width, int height)    {        int numButtons = getComponentCount();        HomeLogoButton logo;        Component c;        for (int i=0; i<numButtons; i++) {            c = getComponent(i);            if (c instanceof HomeLogoButton) {                logo = (HomeLogoButton) c;                if ( pictureToShow.equals(logo.imageURL) ) {                  if ( fileToRead.equals( logo.gotoURL ) ) {                    return;                  } else {                    logo.gotoURL = fileToRead;                    // size is ignored, since crashes if reset size now....                    return;                  }                }            }        }        logo = new HomeLogoButton(pictureToShow, fileToRead, parent, width, height);        add(logo, TableLayout.NEXT);    }} /* CoursePanel */