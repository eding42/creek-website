/* * * @(#)ExecParam.java 0.2 98/04/29 * * Copyright (c) 1997 Ginger Booth.  All Rights Reserved. * * @history: vfb, 980429, overhaul for CourseWare 0.2 * @history: original * @author Ginger Booth * @version 0.1, September 1997 */package courseware.util;/** An ExecParam is a ParamList item that turns into a pseudo ExecButton *  in a ParamDialog.  In other words, ExecParams are for adding *  executable items to popup menus.  The Scenarios button executes a *  ParamList whose members are each an ExecParam. See ParamMgr method *  makeScenarioExecParam for example. * *  Ginger:  could add static OKParam and CancelParam to have around.*/import java.awt.*;import java.util.*;import java.lang.reflect.*;public class ExecParam extends Param {    public ExecParam(String label, Object[] args,                     Object atarget, Method adoes)    {        super(label, args, atarget, adoes, true);    }    public ExecParam() {super();}    /** Return list of components needed for a line of popup to set this     *  "parameter".     */    public Vector components()    {        Vector v = new Vector(1,1);        v.addElement(new ExecButton(name, value, owner, method));        return v;    }    /** Does nothing. */    public void readComponents(Vector widgets, int startcolumn) { }    /** Does nothing. Otherwise all buttons on popups would execute     *  each time popup popped down. */    public void apply() { }    /** Does nothing. */    public void popDown(Container target) { }    public String toString() {        return "ExecParam[name=" + name +            ",owner=" + owner +            ",method=" + method +            ",arguments=" + valueString() + "]";    }}