/* * * @(#)CourseWareApplet.java 0.2 98/04/22 * * Copyright (c) 1998 Ginger Booth.  All Rights Reserved. * * @history: original * @author Ginger Booth * @version 0.1, July 1997 * @version 0.2, April 1998, reworking Params/Java 1.1 */package courseware.util;import java.applet.*;import java.awt.*;import java.net.*;import java.text.*;import java.lang.reflect.*;public class CourseWareApplet extends Applet implements CourseWare{    private ParamMgr paramMgr;    private CoursePanel     coursePanel = null;    private Panel           moduleButtonPanel;    private TextArea        commentMgr;    private String          moduleToRun;    private String          scenarioLabel = "Scenarios";    private ExecButton      scenarioButton = null;    private CourseWare      module;    private Dimension       moduleDimension; // includes lhs buttons and drawing space    private int             commentRows   = 4;    private boolean remakeComments = false;    public CourseWareApplet() {      super();    }    public void init() {        // my thread min priority so that redraws happen timely        Thread.currentThread().setPriority(Thread.MIN_PRIORITY);        setLayout(new BorderLayout());        URL paramsURL;        try {            paramsURL = new URL( getDocumentBase(),                                 getParameter("parameters") );            paramMgr = new ParamMgr(paramsURL, this);        } catch (Exception e) {            System.err.println(e);            return;        }        coursePanel = new CoursePanel(this);        coursePanel.init();        coursePanel.setVisible(true);        if (paramMgr.getNumScenarios() > 1)          scenarioButton = paramMgr.makeScenarioButton(scenarioLabel);        // columns is irrelevant if borderlayout SOUTH--fills bottom.        commentMgr = new TextArea("", commentRows, 10, TextArea.SCROLLBARS_NONE);        commentMgr.setEditable(false);        commentMgr.setVisible(true);        add(BorderLayout.WEST, coursePanel);        if (commentRows != 0)          add(BorderLayout.SOUTH, commentMgr);    }    public void setCommentRows(int i) {        if (i != commentRows) {            commentRows = i;            remakeComments = true;        }    }    public void setBackground(int r, int g, int b) {      setBackground(new Color(r, g, b));    }    public void setButtonBackground(Color c) {      MatchedButton.background = c;      if (scenarioButton != null)        scenarioButton.setBackground(c);    }    public void setButtonForeground(Color c) {      MatchedButton.foreground = c;      if (scenarioButton != null)        scenarioButton.setForeground(c);    }    public void setBackground(Color c) {       super.setBackground(c);       Graphics gr = getGraphics();       gr.setColor(c);       Dimension d = getSize();       gr.fillRect(0,0,d.width, d.height);       if (coursePanel != null)           coursePanel.setBackground(c);       if (commentMgr != null)           commentMgr.setBackground(c);       if (module != null)           module.setBackground(c);    }    public void setForeground(int r, int g, int b) {      setForeground(new Color(r, g, b));    }    public void setForeground(Color c) {       super.setForeground(c);       Graphics gr = getGraphics();       if (coursePanel != null)           coursePanel.setForeground(c);       if (module != null)           module.setForeground(c);       if (commentMgr != null)           commentMgr.setForeground(c);    }    public void reinit() {      coursePanel.doLayout();      String comments = "";      if (remakeComments) {        if (commentMgr != null)          comments = commentMgr.getText();        remakeComments = false;        remove(commentMgr);        // columns is irrelevant if borderlayout SOUTH--fills bottom.        commentMgr = new TextArea("", commentRows, 10,                            TextArea.SCROLLBARS_NONE);        commentMgr.setEditable(false);        commentMgr.setVisible(true);        if (commentRows != 0)          add(BorderLayout.SOUTH, commentMgr);        doLayout();        comment(comments);        MemCleaner.nap();      }    }    public void setScenarioLabel(String s) {      if (scenarioButton == null)        return;      scenarioButton.setVisible(false);      scenarioButton.setLabel(scenarioLabel = s);      scenarioButton.setVisible(true);    }    public CourseWare getOwner() {return this;}    public Container getContainer() {return getParent();}    public void setOwner(CourseWare a) { }    public void setModuleToRun(String s) {moduleToRun = s; }    public void bindParams(ParamList p) {        // mine are already bound by ParamMgr        if (module != null) module.bindParams(p);        p.bindAllObjects(coursePanel.getClass(), coursePanel);    }    public void clear() {    }    public void setReader(String label, String value) {        coursePanel.setReader(label, value);    }    public void setLogo(String picture, String gotoURL, int width, int height) {        coursePanel.setLogo(picture, gotoURL, width, height);    }  public void moduleMethod(String methodName) {    if (module == null) return;    module.moduleMethod(methodName);  }  public void moduleMethodArgs(String methodName, String args) {    if (module == null) return;    module.moduleMethodArgs(methodName, args);  }    protected void makeModule() {        if (module != null) {            if (module.getClass().getName().equals(moduleToRun)) {                module.clear();                return; // already instantiated            } else {                remove((Component) module);                module.finalize();            }        }        try {            module = (CourseWare) Class.forName(moduleToRun).newInstance();            module.setOwner(this);            module.init();        } catch (Exception e) {            System.err.println(e);            return;        }        if ( (module.getLayout() instanceof ModuleLayout) &&             (scenarioButton != null) )        {          ModuleLayout lm = (ModuleLayout) module.getLayout();          module.add(ModuleLayout.BUTTONLIST_STRING, scenarioButton);          scenarioButton.setVisible(true);          lm.setConstraint(scenarioButton, 0, ModuleLayout.BUTTONLIST);          lm.makeFirstButton(scenarioButton);        }     }     /** Override Applet so consult both CourseWare's scheme and the      *  HTML scheme.  HTML is checked first.      */     public String getParameter(String name) {        String sparam = super.getParameter(name);        if (sparam != null)          return sparam;        Param cwparam = paramMgr.getParameter(name);        if (cwparam != null) {          return cwparam.valueString();        }        return null;     }     /** Look only for Params.      */     public Param getParam(String name) {        return paramMgr.getParameter(name);     }     /** Get current scenario whole parameter list.      */     public ParamList getCurrentParamList() {return paramMgr.getParameters();}     public TextArea getCommentMgr() {return commentMgr;}     public CoursePanel getCoursePanel() {return coursePanel;}     public ExecButton getScenarioButton() {return scenarioButton;}     public void start() {        // we can't bindParams until we have a module to bind to,        // yet one of the params is which module. So need to        // bypass bindParams to get the module to instantiate.        ParamList theParams = paramMgr.getParameters();        setModuleToRun(getParameter("moduleToRun"));        makeModule();        bindParams(theParams);        clear();        theParams.apply();        reinit();        // a tad counter-intuitive....        if (module != null) {            if (module instanceof Runnable) {                Thread modThread = new Thread((Runnable) module);                modThread.setPriority(Thread.MIN_PRIORITY);                modThread.start();            } else {               module.start();            }        }        repaint();    }    public void comment(String msg) {      // lot of foolery to get the text scrolled to bottom & painted right....      if (commentRows == 0) return;      if (commentMgr.getText().length() < 2)        commentMgr.append(msg);      else        commentMgr.append("\n" + msg);      commentMgr.setCaretPosition(commentMgr.getText().length());    }    public void stop() {      if (module != null) {        module.stop();      }      MemCleaner.nap();      MemCleaner.cleanup();      super.stop();    }    public void finalize() {      if (module != null) {        module.finalize();        module = null;      }    }    public void destroy() {      setVisible(false);      super.destroy();      MemCleaner.cleanup();    }}