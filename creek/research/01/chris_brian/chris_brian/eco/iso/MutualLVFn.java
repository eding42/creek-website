 /* * * @(#)MutualLVFn.java 0.2 98/11/24 * * Copyright (c) 1998 Ginger Booth.  All Rights Reserved. * * @history: original * @author Ginger Booth * @version 0.2, November 1998 *  Extension of Os' assignment 2, add a little mutualism wobble. Iff the other *  species > this species in number, add a bonus to growth rate of percent of *  mutual predators going after the other one. (Don't have isoclines due to the *  if statement.) */ /** Parameters:      case 0-5: as LotkaVFn      case 6: decoy benefit of 2 on 1      case 7: decoy benefit of 1 on 2  */package eco.iso;import courseware.util.*;import courseware.plot.*;public class MutualLVFn extends LotkaVFn {  double decoy2on1, decoy1on2;  static final int MLV_MAX = LV_MAX + 2;  public MutualLVFn() {    setName("LV Competition + Mutual");  }  public static boolean hasIsoclines() {return false;}  public void setParameter(int i, double value) {    if (i <= LV_MAX)      super.setParameter(i, value);    else switch (i) {      case 6: decoy2on1 = value; break;      case 7: decoy1on2 = value; break;    }  }  public String getParameterLabel(int i) {    if (i <= LV_MAX)      return super.getParameterLabel(i);    else switch (i) {      case 6: return "decoy bonus 2 on 1";      case 7: return "decoy bonus 1 on 2";    }    return "<unknown>";  }  public double getParameter(int i) {    if (i <= LV_MAX)      return super.getParameter(i);    else switch (i) {      case 6: return decoy2on1;      case 7: return decoy1on2;    }    return 0;  }  public int getNumParameters() { return MLV_MAX + 1; }  public double dNdt(int stateVar, double lastState[], double t, double dt) {    double ans = super.dNdt(stateVar, lastState, t, dt);    ans /= dt;    double N1 = lastState[0];    double N2 = lastState[1];    if (stateVar == 1) {      if (N1 > N2)        ans += decoy1on2 * N2r * N2 * ( N1 - N2 ) / (N1 + N2);    } else {      if (N2 > N1)        ans += decoy2on1 * N1r * N1 * ( N2 - N1 ) / (N1 + N2);    }    ans *= dt;    return ans;  }  public PlottableFn getIsocline(int stateVar) {    return null;  }}