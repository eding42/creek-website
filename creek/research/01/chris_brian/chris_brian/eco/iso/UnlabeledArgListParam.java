package eco.iso;import java.util.*;import java.awt.*;import courseware.util.*;public class UnlabeledArgListParam extends ArgListParam {    public UnlabeledArgListParam(String name, Object[] val, int nvisible)    {        super(name, val, nvisible);    }    public UnlabeledArgListParam() {        super();    }    public Vector components()    {        TextField tf;        Label l;        Class vclass;        // allocate Vector to put components in        Vector v = new Vector(getNumVisible()*2 + 3,5);        // label value, label value, ...        for (int i=0; i<getNumVisible(); i++) {            l = new Label(getArgLabel(i));            v.addElement(l);            vclass = value[i].getClass();            if (vclass == Boolean.class)              v.addElement( Param.valBoolean((Boolean) value[i]) );            else              v.addElement( Param.valComponent(value[i]) );            if (getMultiLineFlag())              v.addElement(new NewRowMarker(2));        }        return v;    }    /** Read widgets back into values[]. */    public void readComponents(Vector widgets, int startcolumn) {        // get new function name label        Component widget;        TextField tfwidget;        int start = startcolumn + 1;        for (int i=0; i < getNumVisible(); i++) {            widget = (Component) widgets.elementAt(start + i*2);            if (widget instanceof TextField) {                Object test = interpretTextFieldAs((TextField) widget, value[i]);                if (test != null)                  value[i] = test;            } else if (widget instanceof Checkbox) {                value[i] = new Boolean( ((Checkbox) widget).getState() );            }        }    }}